var express = require('express');var ueditor = require('ueditor');var path = require('path');var router = express.Router();var fs = require('fs');var md5 = require('md5');router.use('/', express.static(path.resolve(__dirname, '../static/ueditor/ueditor')));router.use('/ue', ueditor(path.resolve(__dirname, '../static'), function(req, res, next) {    // ueditor 客户发起上传图片请求    if(req.query.action === 'uploadimage'){        // 这里你可以获得上传图片的信息        // var foo = req.ueditor;        // 下面填写你要把图片保存到的路径 （ 以 path.join(__dirname, 'public') 作为根路径）        var img_url = '/ueditor/upload/images/';        //  你只要输入要保存的地址 。保存操作交给ueditor来做，个人添加了文件处理回调。        //  回调函是个人需求，避免ueditor编辑的时候上传过多的重复图片占用服务器资源。        //  其实该给文件buffer加md5，太懒了。直接给size了，个人网站size重复的概率应该很低。        res.ue_up(img_url, function (static_url, img_url, name, cb) {            var imgExt = name.split('.')[1];            var oldPath = static_url + img_url + name;            fs.stat(oldPath, function (err, stat) {                var newName = md5(stat.size) + '.' + imgExt;                var newPath = static_url + img_url + newName;                fs.rename(oldPath, newPath);                //  stat异步，通过回调把修改后的文件名返回给客户端                cb(newName);            });        });    }    //  客户端发起图片列表请求    else if (req.query.action === 'listimage'){        var dir_url = '/ueditor/upload/images/'; // 要展示给客户端的文件夹路径        res.ue_list(dir_url); // 客户端会列出 dir_url 目录下的所有图片    }    // 客户端发起其它请求    else {        res.setHeader('Content-Type', 'application/json');        // 这里填写 ueditor.config.json 这个文件的路径        res.redirect('/ueditor/ueditor.config.json')    }}));module.exports = router;